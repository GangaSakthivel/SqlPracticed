use t;
show tables;
#window function

select * from employees;
+------------+-----------+----------+------------+--------+------------+
| EmployeeID | FirstName | LastName | Department | Salary | JoinDate   |
+------------+-----------+----------+------------+--------+------------+
|          1 | John      | Doe      | HR         |  60000 | 2021-06-01 |
|          2 | Jane      | Smith    | IT         |  75000 | 2020-02-15 |
|          3 | Mike      | Johnson  | HR         |  65000 | 2022-03-10 |
|          4 | Emily     | Davis    | IT         |  80000 | 2019-08-25 |
|          5 | Emma      | Brown    | Sales      |  55000 | 2023-01-01 |
|          6 | Ryan      | Wilson   | Sales      |  52000 | 2022-05-11 |
|          7 | Laura     | Moore    | HR         |  70000 | 2021-11-20 |
|          8 | Jack      | Taylor   | IT         |  72000 | 2020-09-03 |
+------------+-----------+----------+------------+--------+------------+

#Practice Queries Using OVER()

# Ranking Employees by Salary within Each Department:

select firstname, lastname, department, salary,
row_number() over(partition by department) as rn
from employees;

#Calculating Running Total of Salaries

select firstname, lastname, department, salary,
avg(salary) over(partition by department) as departentavgsalary
from employees;

#Calculating the Difference Between Each Employee's Salary and the Highest Salary in Their Department

SELECT EmployeeID, FirstName, LastName, Department, Salary,
       MAX(Salary) OVER (PARTITION BY Department) - Salary AS SalaryDifference
FROM Employees;
