use t;
select * from employee;


select e.*, 
max(salary) over() as max_salary 
from employee e;

#for each department
select e.*, 
max(salary) over(partition by dept_name) as max_Salary
from employee e;

#row_number

select e.*, 
row_number() over(order by salary desc) as rn
from employee e;

select e.*, 
row_number() over(partition by dept_name order by salary desc) as rn
from employee e;

#fetch the first 2 employeees from each department to join the company

select * from(
select e.*, 
row_number() over(partition by dept_name order by emp_id) as rn
from employee e) x
where rn <3;

#fetch the top 3 employees who earn the max salary in each department

select e.*, 
rank() over(partition by dept_name order by salary desc) as rnk
from employee e;

select * from (
select e.*, 
rank() over(partition by dept_name order by salary desc) as rnk
from employee e) x
where x.rnk <= 3;

#dense_rank
select e.*, 
rank() over(partition by dept_name order by salary desc) as rnk,
dense_rank() over(partition by dept_name order by salary desc) as rnk
from employee e;

#lead() and lag()

#fetch a query to display if the salary of an employee is higher, lower or eqaul to the previous employee 

select e.*, 
lag(salary) over(partition by dept_name order by emp_id) as previous_emp_salary,
case	when e.salary > lag(salary) over(partition by dept_name order by emp_id) then 'Higher than previous employee'
		when e.salary < lag(salary) over(partition by dept_name order by emp_id) then 'lower than previous employee'
		when e.salary = lag(salary) over(partition by dept_name order by emp_id) then 'equal to previous employee'
        end sal_range
from employee e;
























